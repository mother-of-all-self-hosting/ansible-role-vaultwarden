# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: (Deprecation) Catch and report renamed settings
  ansible.builtin.fail:
    msg: >-
      Your configuration contains a variable, which now has a different name.
      Please change your configuration to rename the variable (`{{ item.old }}` -> `{{ item.new }}`).
  when: "lookup('ansible.builtin.varnames', ('^' + item.old + '$'), wantlist=True) | length > 0"
  with_items:
    - { "old": "vaultwarden_data_dir_path", "new": "vaultwarden_data_path" }
    - { "old": "vaultwarden_cache_dir_path", "new": "vaultwarden_cache_path" }
    - { "old": "vaultwarden_ephemeral_dir_path", "new": "vaultwarden_ephemeral_path" }
    - { "old": "vaultwarden_container_labels_traefik_rule_ui", "new": "vaultwarden_container_labels_traefik_rule" }
    - { "old": "vaultwarden_container_labels_traefik_rule_websocket", "new": "<Removed. See https://github.com/dani-garcia/vaultwarden/pull/3404>" }
    - { "old": "vaultwarden_config_websocket_enabled", "new": "<Removed. See https://github.com/dani-garcia/vaultwarden/pull/3404>" }
    - { "old": "vaultwarden_config_websocket_port", "new": "<Removed. See https://github.com/dani-garcia/vaultwarden/pull/3404>" }
    - { "old": "vaultwarden_container_websocket_bind_port", "new": "<Removed. See https://github.com/dani-garcia/vaultwarden/pull/3404>" }
    - { "old": "vaultwarden_systemd_required_systemd_services_list", "new": "vaultwarden_systemd_required_services_list" }
    - { "old": "vaultwarden_systemd_required_systemd_services_list_default", "new": "vaultwarden_systemd_required_services_list_default" }
    - { "old": "vaultwarden_systemd_required_systemd_services_list_auto", "new": "vaultwarden_systemd_required_services_list_auto" }
    - { "old": "vaultwarden_systemd_required_systemd_services_list_custom", "new": "vaultwarden_systemd_required_services_list_custom" }
    - { "old": "vaultwarden_systemd_wanted_systemd_services_list", "new": "vaultwarden_systemd_wanted_services_list" }
    - { "old": "vaultwarden_systemd_wanted_systemd_services_list_default", "new": "vaultwarden_systemd_wanted_services_list_default" }
    - { "old": "vaultwarden_systemd_wanted_systemd_services_list_auto", "new": "vaultwarden_systemd_wanted_services_list_auto" }
    - { "old": "vaultwarden_systemd_wanted_systemd_services_list_custom", "new": "vaultwarden_systemd_wanted_services_list_custom" }
    - { "old": "vaultwarden_container_additional_environment_variables", "new": "vaultwarden_environment_variables_additional_variables" }

- name: Fail if required Vaultwarden settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item.name }}`) for using this role.
  when: "item.when | bool and lookup('vars', item.name, default='') | string | length == 0"
  with_items:
    - { "name": "vaultwarden_hostname", when: true }
    - { "name": "vaultwarden_uid", when: true }
    - { "name": "vaultwarden_gid", when: true }
    - "name": "vaultwarden_container_labels_traefik_compression_middleware_name"
      when: "{{ vaultwarden_container_labels_traefik_compression_middleware_enabled }}"

- name: Fail if required Vaultwarden + Postgres integration settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) when `vaultwarden_database_type` is `postgres`
  when: "vaultwarden_database_type == 'postgres' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - vaultwarden_database_password

- name: Fail if SMTP settings are missing (and SMTP is enabled by setting host)
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) to correctly set up email via SMTP.
  when: "vaultwarden_config_smtp_host !='' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - vaultwarden_config_smtp_from

- name: Fail if SMTP security setting is invalid
  ansible.builtin.fail:
    msg: >-
      vaultwarden_config_smtp_security must be 'starttls', 'force_tls', or 'off'
  when: "vaultwarden_config_smtp_security not in ['starttls', 'force_tls', 'off']"

- name: Run if Traefik is enabled
  when: vaultwarden_container_labels_traefik_enabled | bool
  block:
    - name: Fail if Traefik settings required for Vaultwarden are not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "lookup('vars', item, default='') | string | length == 0"
      with_items:
        - vaultwarden_container_labels_traefik_hostname
        - vaultwarden_container_labels_traefik_path_prefix

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `vaultwarden_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if vaultwarden_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          vaultwarden_container_labels_traefik_path_prefix (`{{ vaultwarden_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/vaultwarden`).
      when: "vaultwarden_container_labels_traefik_path_prefix != '/' and vaultwarden_container_labels_traefik_path_prefix[-1] == '/'"
